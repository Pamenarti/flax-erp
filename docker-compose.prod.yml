version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: flax-erp-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-flaxerp}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-FlaxERP_2023!}
      POSTGRES_DB: ${DB_NAME:-flaxerp}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - flax-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: flax-erp-backend
    depends_on:
      - postgres
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=${DB_USER:-flaxerp}
      - DATABASE_PASSWORD=${DB_PASSWORD:-FlaxERP_2023!}
      - DATABASE_NAME=${DB_NAME:-flaxerp}
      - JWT_SECRET=${JWT_SECRET:-flaxerp-production-jwt-secret-key-2023}
      - NODE_ENV=production
      - HOST=0.0.0.0
      - SERVER_IP=88.218.130.67
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      - backend_data:/usr/src/app/dist
      - backend_node_modules:/usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - flax-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - BACKEND_URL=http://88.218.130.67:3000
    container_name: flax-erp-frontend
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://88.218.130.67:3000
      - NODE_ENV=production
    ports:
      - "${FRONTEND_PORT:-8080}:3000"
    volumes:
      - frontend_build:/usr/src/app/.next
      - frontend_node_modules:/usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - flax-network

networks:
  flax-network:
    driver: bridge

volumes:
  postgres_data:
  backend_data:
  backend_node_modules:
  frontend_build:
  frontend_node_modules:
