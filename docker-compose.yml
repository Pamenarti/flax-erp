version: '3.8'

services:
  # PostgreSQL Veritabanı
  db:
    image: postgres:13
    container_name: flax-erp-db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-flaxpassword}
      POSTGRES_USER: postgres
      POSTGRES_DB: flaxerp
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Backend (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    container_name: flax-erp-backend
    restart: always
    depends_on:
      - db
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=${DB_PASSWORD:-flaxpassword}
      - DATABASE_NAME=flaxerp
      - JWT_SECRET=${JWT_SECRET:-flax-erp-jwt-secret-key-change-in-production}
      - NODE_ENV=${NODE_ENV:-production}
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend (Nuxt.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: flax-erp-frontend
    restart: always
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:3001/api
      - HOST=0.0.0.0
      - PORT=3000
      - NODE_ENV=${NODE_ENV:-production}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Adminer - Veritabanı yönetim aracı (geliştirme aşamasında)
  adminer:
    image: adminer
    container_name: flax-adminer
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"  # Sadece local erişim için, canlıda güvenlik için
    networks:
      - flax-network

networks:
  flax-network:
    driver: bridge

volumes:
  pg_data:
    name: flax-erp-pg-data
